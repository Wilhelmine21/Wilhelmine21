$date
	Wed Oct 05 13:24:25 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ANdecoder_tb $end
$var wire 4 ! out [3:0] $end
$var reg 9 " numX [8:0] $end
$scope module D0 $end
$var wire 1 # add $end
$var wire 9 $ numX [8:0] $end
$var wire 4 % out [3:0] $end
$var wire 5 & not_mod_tri [4:0] $end
$var wire 5 ' mod_tri [4:0] $end
$var wire 9 ( error_bit [8:0] $end
$var wire 18 ) and_out [17:0] $end
$var wire 9 * AN [8:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 *
b0 )
b0 (
b0 '
b11111 &
b0 %
b0 $
0#
b0 "
b0 !
$end
#10
1#
b100000 (
b100000 )
b11001 &
b1101 !
b1101 %
b110 '
b11110111 *
b11010111 "
b11010111 $
#20
1#
b10 (
b10000000000000000 )
b1110 &
b1101 !
b1101 %
b10001 '
b11110111 *
b11110101 "
b11110101 $
#30
0#
b1000 (
b10000000 )
b10111 &
b1000 '
b11110111 *
b11111111 "
b11111111 $
#40
1#
b100 (
b100000000000000 )
b10000 &
b1101 !
b1101 %
b1111 '
b11110111 *
b11110011 "
b11110011 $
#50
1#
b1000000 (
b100000000000 )
b10011 &
b1101 !
b1101 %
b1100 '
b11110111 *
b10110111 "
b10110111 $
#60
